{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ossam\\\\OneDrive\\\\Bureau\\\\ecomerce\\\\client\\\\src\\\\components\\\\mainpages\\\\cart\\\\PayPalButton.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { PayPalScriptProvider, PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\n\n// This values are the props in the UI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst amount = \"2\";\nconst currency = \"USD\";\nconst style = {\n  \"layout\": \"vertical\"\n};\n\n// Custom component to wrap the PayPalButtons and handle currency changes\nconst ButtonWrapper = _ref => {\n  _s();\n  let {\n    currency,\n    showSpinner\n  } = _ref;\n  // usePayPalScriptReducer can be use only inside children of PayPalScriptProviders\n  // This is the main reason to wrap the PayPalButtons in a new component\n  const [{\n    options,\n    isPending\n  }, dispatch] = usePayPalScriptReducer();\n  useEffect(() => {\n    dispatch({\n      type: \"resetOptions\",\n      value: {\n        ...options,\n        currency: currency\n      }\n    });\n  }, [currency, showSpinner]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showSpinner && isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      style: style,\n      disabled: false,\n      forceReRender: [amount, currency, style],\n      fundingSource: undefined,\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              currency_code: currency,\n              value: amount\n            }\n          }]\n        }).then(orderId => {\n          // Your code here after create the order\n          return orderId;\n        });\n      },\n      onApprove: function (data, actions) {\n        return actions.order.capture().then(function () {\n          // Your code here after capture the order\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ButtonWrapper, \"97F4ge0M9DD6AP5/rccpuT1ImVM=\", false, function () {\n  return [usePayPalScriptReducer];\n});\n_c = ButtonWrapper;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"750px\",\n      minHeight: \"200px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: {\n        \"client-id\": \"test\",\n        components: \"buttons\",\n        currency: \"USD\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        currency: currency,\n        showSpinner: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","PayPalScriptProvider","PayPalButtons","usePayPalScriptReducer","amount","currency","style","ButtonWrapper","showSpinner","options","isPending","dispatch","type","value","undefined","data","actions","order","create","purchase_units","currency_code","then","orderId","capture","App","maxWidth","minHeight","components"],"sources":["C:/Users/ossam/OneDrive/Bureau/ecomerce/client/src/components/mainpages/cart/PayPalButton.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport {\r\n    PayPalScriptProvider,\r\n    PayPalButtons,\r\n    usePayPalScriptReducer\r\n} from \"@paypal/react-paypal-js\";\r\n\r\n// This values are the props in the UI\r\nconst amount = \"2\";\r\nconst currency = \"USD\";\r\nconst style = {\"layout\":\"vertical\"};\r\n\r\n// Custom component to wrap the PayPalButtons and handle currency changes\r\nconst ButtonWrapper = ({ currency, showSpinner }) => {\r\n    // usePayPalScriptReducer can be use only inside children of PayPalScriptProviders\r\n    // This is the main reason to wrap the PayPalButtons in a new component\r\n    const [{ options, isPending }, dispatch] = usePayPalScriptReducer();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"resetOptions\",\r\n            value: {\r\n                ...options,\r\n                currency: currency,\r\n            },\r\n        });\r\n    }, [currency, showSpinner]);\r\n\r\n\r\n    return (<>\r\n            { (showSpinner && isPending) && <div className=\"spinner\" /> }\r\n            <PayPalButtons\r\n                style={style}\r\n                disabled={false}\r\n                forceReRender={[amount, currency, style]}\r\n                fundingSource={undefined}\r\n                createOrder={(data, actions) => {\r\n                    return actions.order\r\n                        .create({\r\n                            purchase_units: [\r\n                                {\r\n                                    amount: {\r\n                                        currency_code: currency,\r\n                                        value: amount,\r\n                                    },\r\n                                },\r\n                            ],\r\n                        })\r\n                        .then((orderId) => {\r\n                            // Your code here after create the order\r\n                            return orderId;\r\n                        });\r\n                }}\r\n                onApprove={function (data, actions) {\r\n                    return actions.order.capture().then(function () {\r\n                        // Your code here after capture the order\r\n                    });\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<div style={{ maxWidth: \"750px\", minHeight: \"200px\" }}>\r\n            <PayPalScriptProvider\r\n                options={{\r\n                    \"client-id\": \"test\",\r\n                    components: \"buttons\",\r\n                    currency: \"USD\"\r\n                }}\r\n            >\r\n\t\t\t\t<ButtonWrapper\r\n                    currency={currency}\r\n                    showSpinner={false}\r\n                />\r\n\t\t\t</PayPalScriptProvider>\r\n\t\t</div>\r\n\t);\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SACIC,oBAAoB,EACpBC,aAAa,EACbC,sBAAsB,QACnB,yBAAyB;;AAEhC;AAAA;AAAA;AACA,MAAMC,MAAM,GAAG,GAAG;AAClB,MAAMC,QAAQ,GAAG,KAAK;AACtB,MAAMC,KAAK,GAAG;EAAC,QAAQ,EAAC;AAAU,CAAC;;AAEnC;AACA,MAAMC,aAAa,GAAG,QAA+B;EAAA;EAAA,IAA9B;IAAEF,QAAQ;IAAEG;EAAY,CAAC;EAC5C;EACA;EACA,MAAM,CAAC;IAAEC,OAAO;IAAEC;EAAU,CAAC,EAAEC,QAAQ,CAAC,GAAGR,sBAAsB,EAAE;EAEnEH,SAAS,CAAC,MAAM;IACZW,QAAQ,CAAC;MACLC,IAAI,EAAE,cAAc;MACpBC,KAAK,EAAE;QACH,GAAGJ,OAAO;QACVJ,QAAQ,EAAEA;MACd;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACA,QAAQ,EAAEG,WAAW,CAAC,CAAC;EAG3B,oBAAQ;IAAA,WACGA,WAAW,IAAIE,SAAS,iBAAK;MAAK,SAAS,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3D,QAAC,aAAa;MACV,KAAK,EAAEJ,KAAM;MACb,QAAQ,EAAE,KAAM;MAChB,aAAa,EAAE,CAACF,MAAM,EAAEC,QAAQ,EAAEC,KAAK,CAAE;MACzC,aAAa,EAAEQ,SAAU;MACzB,WAAW,EAAE,CAACC,IAAI,EAAEC,OAAO,KAAK;QAC5B,OAAOA,OAAO,CAACC,KAAK,CACfC,MAAM,CAAC;UACJC,cAAc,EAAE,CACZ;YACIf,MAAM,EAAE;cACJgB,aAAa,EAAEf,QAAQ;cACvBQ,KAAK,EAAET;YACX;UACJ,CAAC;QAET,CAAC,CAAC,CACDiB,IAAI,CAAEC,OAAO,IAAK;UACf;UACA,OAAOA,OAAO;QAClB,CAAC,CAAC;MACV,CAAE;MACF,SAAS,EAAE,UAAUP,IAAI,EAAEC,OAAO,EAAE;QAChC,OAAOA,OAAO,CAACC,KAAK,CAACM,OAAO,EAAE,CAACF,IAAI,CAAC,YAAY;UAC5C;QAAA,CACH,CAAC;MACN;IAAE;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA,gBACH;AAEX,CAAC;AAAA,GAhDKd,aAAa;EAAA,QAG4BJ,sBAAsB;AAAA;AAAA,KAH/DI,aAAa;AAkDnB,eAAe,SAASiB,GAAG,GAAG;EAC7B,oBACC;IAAK,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAA,uBAC5C,QAAC,oBAAoB;MACjB,OAAO,EAAE;QACL,WAAW,EAAE,MAAM;QACnBC,UAAU,EAAE,SAAS;QACrBtB,QAAQ,EAAE;MACd,CAAE;MAAA,uBAEd,QAAC,aAAa;QACE,QAAQ,EAAEA,QAAS;QACnB,WAAW,EAAE;MAAM;QAAA;QAAA;QAAA;MAAA;IACrB;MAAA;MAAA;MAAA;IAAA;EACQ;IAAA;IAAA;IAAA;EAAA,QAClB;AAER;AAAC,MAjBuBmB,GAAG;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}