{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ossam\\\\OneDrive\\\\Bureau\\\\ecomerce\\\\client\\\\src\\\\components\\\\mainpages\\\\cart\\\\PayPalButton.js\";\nimport React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MyApp extends React.Component {\n  render() {\n    const onSuccess = payment => {\n      // 1, 2, and ... Poof! You made it, everything's fine and dandy!\n      console.log(\"Payment successful!\", payment);\n      // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onCancel = data => {\n      // The user pressed \"cancel\" or closed the PayPal popup\n      console.log('Payment cancelled!', data);\n      // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onError = err => {\n      // The main Paypal script could not be loaded or something blocked the script from loading\n      console.log(\"Error!\", err);\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n    };\n\n    let env = 'sandbox'; // you can set this string to 'production'\n    let currency = 'USD'; // you can set this string from your props or state  \n    let total = 1; // this is the total amount (based on currency) to charge\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n    const client = {\n      sandbox: 'YOUR-SANDBOX-APP-ID',\n      production: 'YOUR-PRODUCTION-APP-ID'\n    };\n    // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n    // For your sandbox Client-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\" unless you have already done so):\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n    // Note: IGNORE the Sandbox test AppID - this is ONLY for Adaptive APIs, NOT REST APIs)\n    // For production app-ID:\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n    return /*#__PURE__*/_jsxDEV(PaypalExpressBtn, {\n      env: env,\n      client: client,\n      currency: currency,\n      total: total,\n      onError: onError,\n      onSuccess: onSuccess,\n      onCancel: onCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","PaypalExpressBtn","MyApp","Component","render","onSuccess","payment","console","log","onCancel","data","onError","err","env","currency","total","client","sandbox","production"],"sources":["C:/Users/ossam/OneDrive/Bureau/ecomerce/client/src/components/mainpages/cart/PayPalButton.js"],"sourcesContent":["import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n\r\nexport default class MyApp extends React.Component {\r\n    render() {\r\n\t\tconst onSuccess = (payment) => {\r\n\t\t\t// 1, 2, and ... Poof! You made it, everything's fine and dandy!\r\n            \t\tconsole.log(\"Payment successful!\", payment);\r\n            \t\t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n\t\t}\r\n\r\n\t\tconst onCancel = (data) => {\r\n\t\t\t// The user pressed \"cancel\" or closed the PayPal popup\r\n\t\t\tconsole.log('Payment cancelled!', data);\r\n\t\t\t// You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n\t\t}\r\n\r\n\t\tconst onError = (err) => {\r\n\t\t\t// The main Paypal script could not be loaded or something blocked the script from loading\r\n\t\t\tconsole.log(\"Error!\", err);\r\n\t\t\t// Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n\t\t\t// => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n\t\t}\r\n\r\n\t\tlet env = 'sandbox'; // you can set this string to 'production'\r\n\t\tlet currency = 'USD'; // you can set this string from your props or state  \r\n\t\tlet total = 1;  // this is the total amount (based on currency) to charge\r\n\t\t// Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n\t\tconst client = {\r\n\t\t\tsandbox:    'YOUR-SANDBOX-APP-ID',\r\n\t\t\tproduction: 'YOUR-PRODUCTION-APP-ID',\r\n\t\t}\r\n\t\t// In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n\t\t// For your sandbox Client-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\" unless you have already done so):\r\n\t\t//   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n\t\t// Note: IGNORE the Sandbox test AppID - this is ONLY for Adaptive APIs, NOT REST APIs)\r\n\t\t// For production app-ID:\r\n\t\t//   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n\t\t// NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn env={env} client={client} currency={currency} total={total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} />\r\n        );\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC;AAE7D,eAAe,MAAMC,KAAK,SAASF,KAAK,CAACG,SAAS,CAAC;EAC/CC,MAAM,GAAG;IACX,MAAMC,SAAS,GAAIC,OAAO,IAAK;MAC9B;MACWC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,OAAO,CAAC;MAC3C;IACZ,CAAC;;IAED,MAAMG,QAAQ,GAAIC,IAAI,IAAK;MAC1B;MACAH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,IAAI,CAAC;MACvC;IACD,CAAC;;IAED,MAAMC,OAAO,GAAIC,GAAG,IAAK;MACxB;MACAL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEI,GAAG,CAAC;MAC1B;MACA;IACD,CAAC;;IAED,IAAIC,GAAG,GAAG,SAAS,CAAC,CAAC;IACrB,IAAIC,QAAQ,GAAG,KAAK,CAAC,CAAC;IACtB,IAAIC,KAAK,GAAG,CAAC,CAAC,CAAE;IAChB;;IAEA,MAAMC,MAAM,GAAG;MACdC,OAAO,EAAK,qBAAqB;MACjCC,UAAU,EAAE;IACb,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;;IAEA;IACM,oBACI,QAAC,gBAAgB;MAAC,GAAG,EAAEL,GAAI;MAAC,MAAM,EAAEG,MAAO;MAAC,QAAQ,EAAEF,QAAS;MAAC,KAAK,EAAEC,KAAM;MAAC,OAAO,EAAEJ,OAAQ;MAAC,SAAS,EAAEN,SAAU;MAAC,QAAQ,EAAEI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAEpJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}